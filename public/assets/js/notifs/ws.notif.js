// Generated by CoffeeScript 2.2.3
(function() {
  /*
  WebSocket Notification class.
  Refer to the layout view.
  */
  this.WsNotif = class WsNotif {
    constructor(wsUri, topicUri) {
      var conn, ctx, protocol;
      if (window.location.protocol === 'http:') {
        protocol = 'ws:';
      } else {
        protocol = 'wss:';
      }
      wsUri = `${protocol}//${wsUri}`;
      ctx = this;
      conn = new ab.Session(wsUri, function() {
        return conn.subscribe(topicUri, function(topic, data) {
          return ctx.onSub(topic, data);
        });
      }, function() {
        return console.log('Something went wrong. Check if the Push Notification Server is still running.');
      }, {
        'skipSubprotocolCheck': true
      });
    }

    onSub(topic, data) {
      //TODO: Do anything needed here...
      return this.render(data.title, data.buildNotifType);
    }

    //Determins the color of container 
    //based on the build notification type.
    label(buildNotifType) {
      var lbl;
      lbl = '';
      switch (buildNotifType) {
        case 'Create':
          lbl = 'label-success';
          break;
        case 'Create Duplicate':
          lbl = 'label-primary';
          break;
        case 'Delete':
          lbl = 'label-danger';
      }
      return lbl;
    }

    //@param  string  title  The string to compare to, 
    //in order to render a new notification.  
    render(title, buildNotifType) {
      var lbl, oTitle, sProj, sTitle;
      lbl = this.label(buildNotifType);
      console.log('lbl ', lbl);
      sProj = '.sidebar-menu .treeview-menu.projects';
      sTitle = `${sProj} li > a > span`;
      oTitle = $(`${sTitle}:contains('${title}')`);
      return oTitle.filter(function() {
        var n, oNotif, p;
        if ($.trim($(this).text()) === $.trim(title)) {
          p = $(this).closest('li');
          oNotif = p.find('#notif.project');
          oNotif.addClass(lbl);
          n = parseInt(oNotif.html());
          if (isNaN(n) || n < 0) {
            n = 1;
          } else {
            n = n + 1;
          }
          return oNotif.html(n);
        }
      });
    }

  };

  $(document).ready(function() {
    return new WsNotif($('#build-notif').data('host'), $('#build-notif').data('topic'));
  });

}).call(this);
